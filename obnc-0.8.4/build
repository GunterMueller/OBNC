#!/bin/sh

# Copyright (C) 2017 Karl Landstrom <karl@miasap.se>
#
# This file is part of OBNC.
#
# OBNC is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# OBNC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OBNC.  If not, see <http://www.gnu.org/licenses/>.

set -o errexit -o nounset

readonly selfDirPath="$(cd "$(dirname "$0")"; pwd -P)"

EchoAndRun()
{
	echo "$@"
	eval "$@"
}


BuildCSource()
{
	EchoAndRun cd "$selfDirPath/src"
	
	if [ ! -e lex.yy.c ] || [ ! -e lex.yy.h ] || [ lex.yy.c -ot Oberon.l ] || [ lex.yy.h -ot Oberon.l ]; then
		EchoAndRun lex --header-file=lex.yy.h Oberon.l
	else
		echo "lex.yy.c and lex.yy.h is up to date"
	fi
	
	if [ ! -e y.tab.c ] || [ ! -e y.tab.h ] || [ y.tab.c -ot Oberon.y ]; then
		local tmpdir="${TMPDIR:-/tmp}"
		local bakFile="$tmpdir/y.tab.h.$$"

		if [ -e y.tab.h ]; then
			cp -p y.tab.h "$bakFile"
			trap "rm '$bakFile'" EXIT
		fi

		EchoAndRun yacc -d -t Oberon.y

		#preserve timestamp of y.tab.h if it is unchanged
		if cmp -s y.tab.h "$bakFile"; then
			cp -p "$bakFile" y.tab.h
		fi
	else
		echo "y.tab.c and y.tab.h is up to date"
	fi
	
	cd "$selfDirPath"
}


BuildLibrary()
{
	if [ ! -e "$selfDirPath/bin/obnc-compile" ]; then
		Build
	fi
	EchoAndRun cd "$selfDirPath/lib/obnc"
	for test in ?*Test.obn; do
		#if-command prevents script from halting upon a missing non-required C library, like SDL
		if EchoAndRun "$selfDirPath/bin/obnc" "$test"; then
			true
		fi
	done
	cd "$selfDirPath"
}


Build()
{
	BuildCSource

	local micb="$selfDirPath/bin/micb"

	if [ -e "$selfDirPath/VERSION" ]; then
		local version="$(cat "$selfDirPath/VERSION")"
	else
		local version=
	fi

	#build compiler
	EchoAndRun cd "$selfDirPath/src"
	env CFLAGS="${CFLAGS:-} -DOBNC_VERSION_STRING=\"$version\"" "$micb" obnc-compile.c
	if [ ! -e "$selfDirPath/bin/obnc-compile" ] || [ "$selfDirPath/bin/obnc-compile" -ot obnc-compile ]; then
		cp obnc-compile "$selfDirPath/bin"
	fi
	
	#build core library module OBNC
	EchoAndRun cd "$selfDirPath/lib/obnc"
	"$micb" OBNC_Test.c
		
	cd "$selfDirPath"
}


Clean()
{
	rm -f bin/obnc-compile
	
	rm -f src/obnc-compile
	rm -f src/?*Test
	rm -f src/*.o

	rm -f lib/obnc/?*Test
	rm -f lib/obnc/*.o
	rm -fr lib/obnc/.obnc
}


CleanAll()
{
	Clean
	rm -f src/lex.yy.[ch]
	rm -f src/y.tab.[ch]
}


Help()
{
	echo "usage: "
	printf "\tbuild [c-source | lib | clean | clean-all]\n"
	printf "\tbuild -h\n"
}

case "$#" in
	0) Build;;
	1)
		case "$1" in
			c-source)
				BuildCSource;;
			lib)
				BuildLibrary;;
			clean)
				Clean;;
			clean-all)
				CleanAll;;
			-h)
				Help;;
			*) Help >&2; exit 1
		esac;;
	*) Help >&2; exit 1
esac
